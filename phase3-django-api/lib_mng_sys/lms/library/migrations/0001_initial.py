# Generated by Django 5.2.5 on 2025-08-13 06:59

import django.core.validators
import django.db.models.deletion
import library.models
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('book_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('isbn', models.CharField(max_length=13, unique=True)),
                ('publication_date', models.DateField()),
                ('total_copies', models.PositiveIntegerField()),
                ('available_copies', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Book Details',
                'verbose_name_plural': 'Books Details',
                'db_table': 'book',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Book Genre',
                'verbose_name_plural': 'Book Genres',
                'db_table': 'category',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ContactNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('type', models.CharField(choices=[('mobile', 'Mobile'), ('work', 'Work'), ('home', 'Home')], max_length=20)),
            ],
            options={
                'verbose_name': 'Contact Detail',
                'verbose_name_plural': 'Contact Details',
                'db_table': 'contact',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('pin', models.CharField(max_length=10)),
                ('country', models.CharField(default='India', max_length=50)),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
                'db_table': 'Address',
                'constraints': [models.UniqueConstraint(fields=('street', 'district', 'state', 'pin', 'country'), name='unique_address')],
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('author_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('birth_date', models.DateField()),
                ('nationality', models.CharField(default='Indian', max_length=20)),
                ('biography', models.TextField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Book Author',
                'verbose_name_plural': 'Book Authors',
                'db_table': 'author',
                'ordering': ['first_name', 'last_name'],
                'constraints': [models.UniqueConstraint(fields=('first_name', 'last_name', 'birth_date'), name='unique_name')],
            },
        ),
        migrations.CreateModel(
            name='BookAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.author')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.book')),
            ],
            options={
                'verbose_name': 'Book Authors',
                'db_table': 'book_author',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='authors',
            field=models.ManyToManyField(related_name='books', through='library.BookAuthor', to='library.author'),
        ),
        migrations.CreateModel(
            name='BookLibrary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.book')),
            ],
            options={
                'verbose_name': 'Book Library',
                'verbose_name_plural': 'Book Libraries',
                'db_table': 'book_library',
            },
        ),
        migrations.CreateModel(
            name='BookCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.book')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.category')),
            ],
            options={
                'verbose_name': 'Book Categories',
                'db_table': 'book_category',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='categories',
            field=models.ManyToManyField(related_name='books', through='library.BookCategory', to='library.category'),
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('library_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('contact_email', models.EmailField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('books', models.ManyToManyField(related_name='library_set', through='library.BookLibrary', to='library.book')),
                ('campus_location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='library.address')),
                ('phone_number', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='library.contactnumber')),
            ],
            options={
                'verbose_name': 'Library Details',
                'verbose_name_plural': 'Libraries Details',
                'db_table': 'libraries',
                'ordering': ['library_id'],
            },
        ),
        migrations.AddField(
            model_name='booklibrary',
            name='library',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.library'),
        ),
        migrations.AddField(
            model_name='book',
            name='libraries',
            field=models.ManyToManyField(related_name='book_set', through='library.BookLibrary', to='library.library'),
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('member_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('member_type', models.CharField(choices=[('student', 'Student'), ('faculty', 'Faculty')], max_length=20)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='library.contactnumber')),
            ],
            options={
                'verbose_name': 'Member detail',
                'verbose_name_plural': 'Member details',
                'db_table': 'member',
                'ordering': ['registration_date'],
            },
        ),
        migrations.CreateModel(
            name='Borrowing',
            fields=[
                ('borrowing_id', models.AutoField(primary_key=True, serialize=False)),
                ('borrow_date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateTimeField(default=library.models.default_due_date)),
                ('return_date', models.DateTimeField(blank=True, null=True)),
                ('late_fee', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.book')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.member')),
            ],
            options={
                'verbose_name': 'Borrowed Book',
                'verbose_name_plural': 'Borrowed Books',
                'db_table': 'borrowing',
                'ordering': ['due_date'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('comment', models.CharField(max_length=500)),
                ('review_date', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.book')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.member')),
            ],
            options={
                'verbose_name': 'Book Review',
                'verbose_name_plural': 'Book Reviews',
                'db_table': 'review',
                'ordering': ['-review_date'],
            },
        ),
        migrations.AddConstraint(
            model_name='bookauthor',
            constraint=models.UniqueConstraint(fields=('book', 'author'), name='unique_book_author'),
        ),
        migrations.AddConstraint(
            model_name='bookcategory',
            constraint=models.UniqueConstraint(fields=('book', 'category'), name='unique_book_category'),
        ),
        migrations.AddConstraint(
            model_name='booklibrary',
            constraint=models.UniqueConstraint(fields=('book', 'library'), name='unique_book_library'),
        ),
        migrations.AddConstraint(
            model_name='borrowing',
            constraint=models.UniqueConstraint(fields=('member', 'book'), name='unique_book_member'),
        ),
        migrations.AddConstraint(
            model_name='review',
            constraint=models.UniqueConstraint(fields=('member', 'book'), name='unique_review_per_member_book'),
        ),
    ]
